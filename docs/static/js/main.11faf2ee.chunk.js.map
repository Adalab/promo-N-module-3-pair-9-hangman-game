{"version":3,"sources":["components/App.js","index.js"],"names":["App","nErrors","useState","error","setError","lastLetter","setLastLetter","word","className","split","map","letter","index","htmlFor","onChange","ev","console","log","target","value","pattern","RegExp","test","validar","alert","autoComplete","maxLength","type","name","id","onClick","ReactDOM","render","document","getElementById"],"mappings":"oLA0IeA,MAtIf,WACE,IAAIC,EAAU,EACd,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAOA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwBJ,mBAAS,YAAjC,mBAAOK,EAAP,KACA,GADA,KACsCL,mBAAS,KAA/C,mBAoDA,OApDA,UAqDE,sBAAKM,UAAU,OAAf,UACE,iCACE,oBAAIA,UAAU,gBAAd,kCAEF,uBAAMA,UAAU,OAAhB,UACE,oCACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,oBAAIA,UAAU,UAAd,SAfYD,EAAKE,MAAM,IACZC,KAAK,SAACC,EAAOC,GAC9B,OAAO,oBAAgBJ,UAAU,UAAjBI,WA4BZ,sBAAKJ,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,qBAAIA,UAAU,UAAd,UACE,oBAAIA,UAAU,SAAd,eACA,oBAAIA,UAAU,SAAd,eACA,oBAAIA,UAAU,SAAd,eACA,oBAAIA,UAAU,SAAd,eACA,oBAAIA,UAAU,SAAd,qBAGJ,uBAAMA,UAAU,OAAhB,UACE,uBAAOA,UAAU,QAAQK,QAAQ,cAAjC,gCAGA,uBACEC,SAzFa,SAACC,GAYxB,OAXAC,QAAQC,IAAIF,EAAGG,OAAOC,OAetB,WAEE,IAGMC,EAAU,IAAIC,OAAO,+BAiB3B,QAdIN,EAAGG,OAAOC,SAIVC,EAAQE,KAAKP,EAAGG,OAAOC,OAxBZI,GAIbC,MAAM,yBAFNA,MAAM,6BAMHlB,EAAcS,EAAGG,OAAOC,QA8ErBM,aAAa,MACbjB,UAAU,cACVkB,UAAU,IACVC,KAAK,OACLC,KAAK,cACLC,GAAG,cACHV,MAAOd,UAIb,0BAASG,UAAS,sBAAiBL,GAAnC,UACE,wBAAQ2B,QA/GO,SAACf,GAGtB,OAFAd,EAAUE,EAAQ,EAClBa,QAAQC,IAAIhB,GACLG,EAASH,IA4GV,yBACA,sBAAMO,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,2BC9H1BuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.11faf2ee.chunk.js","sourcesContent":["// Fichero src/components/App.js\nimport '../styles/main.scss';\nimport { useState } from 'react';\n\nfunction App() {\n  let nErrors = 0;\n  const [error, setError] = useState(0);\n  const numberOfErrors = (ev) => {\n    nErrors = error + 1;\n    console.log(nErrors);\n    return setError(nErrors);\n  };\n\n  const [lastLetter, setLastLetter] = useState('');\n  const [word, setWord] = useState('patricia');\n  const [userLetters, setUserLetters] = useState([]);\n\n  const handleLastLetter = (ev) => {\n    console.log(ev.target.value);\n      // Por último, nuestra función que verifica si el campo es válido antes de realizar cualquier otra acción.\n    function verificar() {\n      const valido = validar();\n      if (!valido) {\n        alert('El campo no es válido.');\n      } else {\n        alert('El campo es válido');\n      }\n    }\n    verificar();\n    return setLastLetter(ev.target.value);\n\n\n    // La siguiente funcion valida el elemento input\n    function validar() {\n      // Variable que usaremos para determinar si el input es valido\n      let isValid = false;\n      // El pattern que vamos a comprobar\n      // const pattern = new RegExp('^[A-Z\\u00D1\\u00F1]$', 'i');\n      const pattern = new RegExp('^[a-zA-ZÀ-ÿ\\u00f1\\u00d1]$');\n\n      // Primera validacion, si input esta vacio entonces no es valido\n      if(!ev.target.value) {\n        isValid = false;\n      } else {\n      // Tercera validacion, si input contiene caracteres diferentes a los permitidos\n      if(!pattern.test(ev.target.value)){ \n        // Si queremos agregar letras acentuadas y/o letra ñ debemos usar\n        // codigos de Unicode (ejemplo: Ñ: \\u00D1  ñ: \\u00F1)\n          isValid = false;\n        } else {\n          // Si pasamos todas la validaciones anteriores, entonces el input es valido\n          isValid = true;\n        }\n      }\n      // devolvemos el valor de isValid\n      return isValid;\n    }\n\n  };\n\n  const renderSolutionLetters = () => {\n    const wordLetters = word.split('');\n    return wordLetters.map( (letter,index) => { \n      return <li key={index} className=\"letter\"></li>\n    });\n  }\n\n  return (\n    <div className=\"page\">\n      <header>\n        <h1 className=\"header__title\">Juego del ahorcado</h1>\n      </header>\n      <main className=\"main\">\n        <section>\n          <div className=\"solution\">\n            <h2 className=\"title\">Solución:</h2>\n            <ul className=\"letters\">\n             {renderSolutionLetters()}\n              {/* <li className=\"letter\">k</li>\n              <li className=\"letter\">a</li>\n              <li className=\"letter\"></li>\n              <li className=\"letter\">a</li>\n              <li className=\"letter\">k</li>\n              <li className=\"letter\">r</li>\n              <li className=\"letter\"></li>\n              <li className=\"letter\">k</li>\n              <li className=\"letter\">e</li>\n              <li className=\"letter\">r</li> */}\n               \n            </ul>\n          </div>\n          <div className=\"feedback\">\n            <h2 className=\"title\">Letras falladas:</h2>\n            <ul className=\"letters\">\n              <li className=\"letter\">f</li>\n              <li className=\"letter\">q</li>\n              <li className=\"letter\">h</li>\n              <li className=\"letter\">p</li>\n              <li className=\"letter\">x</li>\n            </ul>\n          </div>\n          <form className=\"form\">\n            <label className=\"title\" htmlFor=\"last-letter\">\n              Escribe una letra:\n            </label>\n            <input\n              onChange={handleLastLetter}\n              autoComplete=\"off\"\n              className=\"form__input\"\n              maxLength=\"1\"\n              type=\"text\"\n              name=\"last-letter\"\n              id=\"last-letter\"\n              value={lastLetter}\n            />\n          </form>\n        </section>\n        <section className={`dummy error-${error}`}>\n          <button onClick={numberOfErrors}>Incrementar</button>\n          <span className=\"error-13 eye\"></span>\n          <span className=\"error-12 eye\"></span>\n          <span className=\"error-11 line\"></span>\n          <span className=\"error-10 line\"></span>\n          <span className=\"error-9 line\"></span>\n          <span className=\"error-8 line\"></span>\n          <span className=\"error-7 line\"></span>\n          <span className=\"error-6 head\"></span>\n          <span className=\"error-5 line\"></span>\n          <span className=\"error-4 line\"></span>\n          <span className=\"error-3 line\"></span>\n          <span className=\"error-2 line\"></span>\n          <span className=\"error-1 line\"></span>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// Fichero src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}